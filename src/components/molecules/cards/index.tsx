import Button from "@/components/atoms/button";
import theme from "@/styles/theme";
import { P } from "@/styles/typography";
import {
  Paper,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
} from "@mui/material";
import { FC } from "react";

type Data = {
  taskName?: string;
  description?: string;
  leadTime?: string;
  instruction?: string;
  price?: string;
  availableTasks?: number;
};
type Titles = {
  id: number; // id is a random number generated by Math.random()
  name: string; // name is a string
};
interface ITaskTable {
  titles: Titles[];
  data: Data[];
  bg: "dark" | "light";
}
const TaskTable: FC<ITaskTable> = ({ titles, data, bg = "light" }) => {
  return (
    <TableContainer component={Paper} style={{ borderRadius: 8 }}>
      <Table
        sx={{
          backgroundColor:
            bg === "light"
              ? theme.palette.text.primary
              : theme.palette.primary.contrastText,
        }}
      >
        <TableHead>
          <TableRow>
            {titles.map(({ id, name }) => {
              return (
                <TableCell key={id}>
                  <P
                    fontWeight="bold"
                    sx={{
                      color: theme.palette.primary.main,
                    }}
                  >
                    {name}
                  </P>
                </TableCell>
              );
            })}
          </TableRow>
        </TableHead>
        <TableBody>
          {data.map((task, index) => (
            <TableRow key={index}>
              {task.taskName && (
                <TableCell>
                  <P
                    sx={{
                      color: theme.palette.primary.main,
                    }}
                    fontWeight="500"
                  >
                    {task.taskName}
                  </P>
                </TableCell>
              )}
              {task.description && (
                <TableCell>
                  <P
                    sx={{
                      color: theme.palette.primary.main,
                    }}
                  >
                    {task.description}
                  </P>
                </TableCell>
              )}
              {task.leadTime && (
                <TableCell>
                  <P
                    sx={{
                      color: theme.palette.primary.main,
                    }}
                  >
                    {task.leadTime}
                  </P>
                </TableCell>
              )}
              {task.instruction && (
                <TableCell>
                  <P
                    sx={{
                      color: theme.palette.primary.main,
                    }}
                  >
                    {" "}
                    {task.instruction}
                  </P>
                </TableCell>
              )}
              {task.price && (
                <TableCell>
                  {" "}
                  <P
                    sx={{
                      color: theme.palette.primary.main,
                    }}
                  >
                    {task.price}
                  </P>
                </TableCell>
              )}
              {task.availableTasks && (
                <TableCell>
                  <P
                    sx={{
                      color: theme.palette.primary.main,
                    }}
                  >
                    {task.availableTasks}
                  </P>
                </TableCell>
              )}
              {task.taskName && (
                <TableCell>
                  <Button
                    variant="contained"
                    text={task.taskName}
                    size="small"
                    sx={{
                      borderRadius: 2,
                      textTransform: "none",
                      bgcolor: theme.palette.secondary.main,
                      color: theme.palette.secondary.contrastText,
                    }}
                  />
                </TableCell>
              )}
            </TableRow>
          ))}
        </TableBody>
      </Table>
    </TableContainer>
  );
};

export default TaskTable;
