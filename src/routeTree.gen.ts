/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as DashboardDashboardIndexImport } from './routes/_dashboard/dashboard/index'
import { Route as DashboardDashboardTestImport } from './routes/_dashboard/dashboard/test'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const NotfoundIndexLazyImport = createFileRoute('/not_found/')()
const AuthSignUpIndexLazyImport = createFileRoute('/auth/sign-up/')()

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const NotfoundIndexLazyRoute = NotfoundIndexLazyImport.update({
  id: '/not_found/',
  path: '/not_found/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/not_found/index.lazy').then((d) => d.Route),
)

const AuthSignUpIndexLazyRoute = AuthSignUpIndexLazyImport.update({
  id: '/auth/sign-up/',
  path: '/auth/sign-up/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/auth/sign-up/index.lazy').then((d) => d.Route),
)

const DashboardDashboardIndexRoute = DashboardDashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardDashboardTestRoute = DashboardDashboardTestImport.update({
  id: '/dashboard/test',
  path: '/dashboard/test',
  getParentRoute: () => DashboardRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/not_found/': {
      id: '/not_found/'
      path: '/not_found'
      fullPath: '/not_found'
      preLoaderRoute: typeof NotfoundIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/dashboard/test': {
      id: '/_dashboard/dashboard/test'
      path: '/dashboard/test'
      fullPath: '/dashboard/test'
      preLoaderRoute: typeof DashboardDashboardTestImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/dashboard/': {
      id: '/_dashboard/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardDashboardIndexImport
      parentRoute: typeof DashboardImport
    }
    '/auth/sign-up/': {
      id: '/auth/sign-up/'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface DashboardRouteChildren {
  DashboardDashboardTestRoute: typeof DashboardDashboardTestRoute
  DashboardDashboardIndexRoute: typeof DashboardDashboardIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardDashboardTestRoute: DashboardDashboardTestRoute,
  DashboardDashboardIndexRoute: DashboardDashboardIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '': typeof DashboardRouteWithChildren
  '/not_found': typeof NotfoundIndexLazyRoute
  '/dashboard/test': typeof DashboardDashboardTestRoute
  '/dashboard': typeof DashboardDashboardIndexRoute
  '/auth/sign-up': typeof AuthSignUpIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '': typeof DashboardRouteWithChildren
  '/not_found': typeof NotfoundIndexLazyRoute
  '/dashboard/test': typeof DashboardDashboardTestRoute
  '/dashboard': typeof DashboardDashboardIndexRoute
  '/auth/sign-up': typeof AuthSignUpIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/_dashboard': typeof DashboardRouteWithChildren
  '/not_found/': typeof NotfoundIndexLazyRoute
  '/_dashboard/dashboard/test': typeof DashboardDashboardTestRoute
  '/_dashboard/dashboard/': typeof DashboardDashboardIndexRoute
  '/auth/sign-up/': typeof AuthSignUpIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/not_found'
    | '/dashboard/test'
    | '/dashboard'
    | '/auth/sign-up'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/not_found'
    | '/dashboard/test'
    | '/dashboard'
    | '/auth/sign-up'
  id:
    | '__root__'
    | '/'
    | '/_dashboard'
    | '/not_found/'
    | '/_dashboard/dashboard/test'
    | '/_dashboard/dashboard/'
    | '/auth/sign-up/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  NotfoundIndexLazyRoute: typeof NotfoundIndexLazyRoute
  AuthSignUpIndexLazyRoute: typeof AuthSignUpIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  DashboardRoute: DashboardRouteWithChildren,
  NotfoundIndexLazyRoute: NotfoundIndexLazyRoute,
  AuthSignUpIndexLazyRoute: AuthSignUpIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_dashboard",
        "/not_found/",
        "/auth/sign-up/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_dashboard": {
      "filePath": "_dashboard.tsx",
      "children": [
        "/_dashboard/dashboard/test",
        "/_dashboard/dashboard/"
      ]
    },
    "/not_found/": {
      "filePath": "not_found/index.lazy.tsx"
    },
    "/_dashboard/dashboard/test": {
      "filePath": "_dashboard/dashboard/test.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/dashboard/": {
      "filePath": "_dashboard/dashboard/index.tsx",
      "parent": "/_dashboard"
    },
    "/auth/sign-up/": {
      "filePath": "auth/sign-up/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
