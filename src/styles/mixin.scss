@mixin center($position: absolute) {
	position: $position;
	top: 50%;
	left: 50%;
	transform: translateX(-50%) translateY(-50%);
}

@mixin center-horizontal($position: absolute) {
	position: $position;
	left: 50%;
	transform: translateX(-50%);
}

@mixin center-vertical($position: absolute) {
	position: $position;
	top: 50%;
	transform: translateY(-50%);
}

@mixin background-image-tinted(
	$image,
	$rgba,
	$background-position: center center
) {
	background:
		linear-gradient($rgba, $rgba),
		url("#{$image}") $background-position;
	background-size: cover;
}

@mixin background-cover(
	$background-position: center center,
	$background-size: cover,
	$background-repeat: no-repeat
) {
	background-position: center;
	background-repeat: no-repeat;
	background-size: cover;
}

@mixin gradient-vertical($start, $stop, $from: 0, $to: 100%) {
	background: $start;
	background: linear-gradient(to bottom, $start $from, $stop $to);
}

@mixin gradient-horizontal($start, $stop, $from: 0, $to: 100%) {
	background: $start;
	background: linear-gradient(to right, $start $from, $stop $to);
}

@mixin gradient-radial($start, $stop, $from: 0, $to: 100%, $shape: circle) {
	background: $start;
	background: radial-gradient($shape at center, $start $from, $stop $to);
}

@mixin block-reset {
	display: block !important;
	width: 100% !important;
	float: none !important;
	margin-right: 0 !important;
	margin-left: 0 !important;
	transform: none !important;
	padding: 0 !important;
}

@mixin text-ellipsis {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

@mixin svgFill($color, $size: false) {
	svg {
		@if $size {
			width: $size;
			height: $size;
		}

		path {
			transition: all 0.5s;
			fill: $color;
			@content;
		}
	}
}

@mixin svgStroke($color, $size: false) {
	svg {
		@if $size {
			width: $size;
			height: $size;
		}

		path {
			transition: all 0.5s;
			stroke: $color;
			@content;
		}
	}
}

@mixin standard-box-shadow($type) {
	@if $type == normal {
		box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
	} @else if $type == design {
		box-shadow: 4px 4px 32px 0 rgba(0, 0, 0, 0.08);
	} @else if $type == inset {
		box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
	} @else if $type == hover {
		&:hover {
			box-shadow: 0 8px 12px rgba(0, 0, 0, 0.15);
		}
	}
}

$breakpoints: (
	mobile: 375px,
	mobile-x: 480px,
	mini-tablet: 576px,
	tablet: 769px,
	tablet-x: 991px,
	desktop: 1048px,
	laptop: 1200px,
	laptop-x: 1350px,
	pc: 1440px,
	pc-x: 1920px,
);

@mixin customBreakpointSize($width) {
	@media (max-width: $width) {
		@content;
	}
}

@mixin breakpoint($device) {
	$width: map-get($breakpoints, $device);
	@media (max-width: $width) {
		@content;
	}
}

@mixin landscape() {
	@media (orientation: landscape) {
		@content;
	}
}

@mixin width-4($gap: 0) {
	width: calc((100% - 75%) - $gap);
	@include breakpoint(pc) {
		width: calc((100% - 66.66%) - $gap);
	}
	@include breakpoint(tablet-x) {
		width: calc((100% - 50%) - $gap);
	}
	@include breakpoint(mobile-x) {
		width: 100%;
	}
}

@mixin width-3($gap: 0) {
	width: calc((100% - 66.66%) - $gap);

	@include breakpoint(tablet-x) {
		width: calc((100% - 50%) - $gap);
	}
	@include breakpoint(mobile-x) {
		width: 100%;
	}
}

@mixin width-2($gap: 0) {
	width: calc((100% - 50%) - $gap);
	@include breakpoint(mobile-x) {
		width: 100%;
	}
}

@mixin container() {
	max-width: 1440px;
	margin-left: auto;
	margin-right: auto;
	padding: 0 60px;
	width: 100%;

	@include breakpoint(laptop) {
		padding: 0 50px;
	}
	@include breakpoint(desktop) {
		padding: 0 35px;
	}
	@include breakpoint(tablet) {
		padding: 0 30px;
	}
	@include breakpoint(mobile-x) {
		padding: 0 16px;
	}
}

@mixin overlay {
	position: absolute !important;
	display: block;
	top: 0;
	left: 0;
	height: 100%;
	width: 100%;
	background: rgba(0, 0, 0, 0.3);
}

@mixin word-break {
	word-wrap: break-word; 
	overflow-wrap: break-word; 
	word-break: break-word; 
}
@mixin button-large {
	padding: 14px;
	min-height: 56px;
}

@mixin button-middle {
	padding: 10px;
	min-height: 44px;
}

@mixin button-small {
	padding: 12px;
	font-size: 16px !important;
	min-height: 32px;
}

@mixin shimmer-effect {
	position: relative;
	background-color: #e0e0e0;
	border-radius: 16px;
	overflow: hidden;

	&::after {
		content: "";
		position: absolute;
		inset: 0;
		background: linear-gradient(
			90deg,
			rgba(224, 224, 224, 0) 0%,
			rgba(224, 224, 224, 0.5) 50%,
			rgba(224, 224, 224, 0) 100%
		);
		animation: shimmer 1.5s infinite;
		z-index: 200;
		border-radius: 20px;
	}
}
